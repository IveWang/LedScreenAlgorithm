LED显示标签开发说明

名词解释
LED显示(LED Display)：指整个LED显示部分；
幕(Act)：指上位机软件中一个TextBox的内容，他们具有同一种特效、同一种速度等。本项目最多支持八幕；
屏(Screen)：指排除时间概念的12*48像素内容，最多容纳四个汉字。若一幕中的汉字为四个以上，它们会被分成很多屏来显示；
特效(Effect)：指一屏的内容，会以特殊的形式渐渐出现或消失；
帧(Frame)：指有时间概念的12*48像素内容，每秒刷新25次，通常为一屏还没完全显示时的半进入状态；
刷新方式
前台为定时器中断，417us进入一次并在其中刷新两列。刷新一屏为一个帧周期，时间为417(us)*4(亮度)*24(两列)，约为40ms。每秒可刷25帧。在这里通过brightCnt与brightness控制亮度，亮度一共四个等级，最低级时每四次亮一次，最高级时四次全亮。
在每个帧周期中第一次进入定时器中断时，开始在后台main中计算下一帧要显示的内容，也就是说，留给MCU一整帧周期的时间来计算下一帧。每个帧周期的最后一次进入定时器中断时，将下一帧buffer的指针与当前已显示完的buffer指针交换。也就是说，一共用到了两个帧buffer内存区域，一个用于当前刷新，一个用于下一帧计算。它们分别为curFrameBuf与nxtFrameBuf。
幕处理层
计算下一帧显示内容时，采用逐层计算的方式。其中最外层为幕处理层，该层负责计算速度、闪烁效果与跑马灯效果。
由于每一幕都有各自的速度，所以将计算速度放在这一层。由speedCnt、speedMax与speedSuper负责计算。其中speedCnt与speedMax计算正常速度，speedCnt逐次加一，直至其大于speedMax时才真正进行计算，所此可知，speedMax越大，速度越慢。当speedMax等于0时，每次都需真正计算，此时速度最快。但为增加程序扩展性，引入speedSuper的概念，speedSuper为超级速度，当它不为0时，忽略speedCnt与speedMax，speedSuper为几，表示一次就连续计算几次。需要注意的是，由于MCU速度有限，计算需在40ms内完成，所以speedSuper的值不宜太大。
计算完成后，若有闪烁或跑马灯效果，则需再次进行计算。这两个效果和速度无关，各自控制速度。且当两个效果同时出现时，闪烁不影响跑马灯。故将闪烁计算放在前，跑马灯计算放在后。
特效抽象层
幕处理后，进入特效处理层。但九种特效有很多特效的方式类似，故引入特效抽象层，将类似特效归为一类，在该层一并处理，减少重复代码。
九种特效分为四个模式(或四类)：模式一为出现->停留->出现->停留->消失，即只有最后一屏才有消失的过程，前面的所有屏都只有出现与停留，如雪花、激光、画卷、固定；模式二为出现->停留->消失->出现->停留->消失，即每一屏都有完整的出现停留消失过程，如上移、下移；模式三为无限左滚动，如左移，此特效在宏观上没有了“屏”的概念(但实际计算时也加入了屏)；模式四为无限右滚动，如右移，和模式三类似。
在该层模式一与模式二的处理中，用stat标志当前的状态，有未初始化状态、出现状态、停留状态、消失状态。不同状态，采取不同动作。其中出现与消失状态，跟特效细节相关，通过指针调用特效实现层的函数来实现。
在该层模式三与模式四的处理中，除当前屏buffer(curScreenBuf)外，又加入了下一屏buffer(nxtScreenBuf)与上一屏buffer(lstScreenBuf)。其中下一屏用于模式三，上一屏用于模式四，所以两个不会同时用到，可共享内存区域。与模式一二不同，模式三四调用两个特效细节函数：出现和滚动。出现只有在第一屏时才有，为屏幕从空，到第一屏滚动至完全出现的过程。滚动为每一屏渐渐滚出屏幕的过程。